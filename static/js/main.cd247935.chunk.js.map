{"version":3,"sources":["utils/API.js","components/UserContainer.js","components/JumboTron.js","App.js","index.js"],"names":["usersList","axios","get","UserContainer","state","users","search","sortDirection","col","handleSearchChange","e","setState","target","value","renderUsers","filteredUsers","sort","sortUsers","map","user","index","key","src","image","alt","first","last","email","Date","dob","toDateString","getHeaderClassName","handleSortDirectionChange","a","b","API","then","res","userArray","data","results","name","date","picture","medium","catch","err","console","log","this","toLowerCase","filter","includes","className","onChange","type","placeholder","aria-label","aria-describedby","scope","onClick","React","Component","JumboTron","App","ReactDOM","render","document","getElementById"],"mappings":"2PAMe,OACbA,UALF,WACE,OAAOC,IAAMC,IAAI,mDC2JJC,E,4MAxJbC,MAAQ,CACNC,MAAO,GACPC,OAAQ,GACRC,cAAe,GACfC,IAAK,I,EAwBPC,mBAAqB,SAAAC,GACnB,EAAKC,SAAS,CAAEL,OAAQI,EAAEE,OAAOC,S,EAenCC,YAAc,WACZ,OAAO,EAAKC,gBACTC,KAAK,EAAKC,WACVC,KAAI,SAACC,EAAMC,GACV,OACE,wBAAIC,IAAKD,GACP,4BACE,yBAAKE,IAAKH,EAAKI,MAAOC,IAAI,UAE5B,4BAAKL,EAAKM,OACV,4BAAKN,EAAKO,MACV,4BAAKP,EAAKQ,OACV,4BAAK,IAAIC,KAAKT,EAAKU,KAAKC,qB,EAQlCC,mBAAqB,SAAAvB,GACnB,OAAO,EAAKJ,MAAMI,MAAQA,EAAnB,oBACU,EAAKJ,MAAMG,eADrB,a,EAOTyB,0BAA4B,SAAAxB,GAC1B,EAAKJ,MAAMI,MAAQA,GAAoC,cAA7B,EAAKJ,MAAMG,cACjC,EAAKI,SAAS,CAAEJ,cAAe,aAAcC,IAAKA,IAClD,EAAKG,SAAS,CAAEJ,cAAe,YAAaC,IAAKA,K,EAIvDS,UAAY,SAACgB,EAAGC,GACd,OAAID,EAAE,EAAK7B,MAAMI,KAAO0B,EAAE,EAAK9B,MAAMI,KACC,cAA7B,EAAKJ,MAAMG,eAAiC,EAAI,EAC9C0B,EAAE,EAAK7B,MAAMI,KAAO0B,EAAE,EAAK9B,MAAMI,KACN,cAA7B,EAAKJ,MAAMG,cAAgC,GAAK,EAElD,G,uDA3ET,WAAqB,IAAD,OAClB4B,EAAInC,YACDoC,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAAIE,KAAKC,QAAQtB,KAAI,SAAAC,GACrC,MAAO,CACLM,MAAON,EAAKsB,KAAKhB,MACjBC,KAAMP,EAAKsB,KAAKf,KAChBC,MAAOR,EAAKQ,MACZE,IAAKV,EAAKU,IAAIa,KACdnB,MAAOJ,EAAKwB,QAAQC,WAGxB,EAAKjC,SAAS,CAAEN,MAAOiC,OAExBO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,2BAS9B,WACE,IAAMxC,EAAS2C,KAAK7C,MAAME,OAAO4C,cACjC,OAAOD,KAAK7C,MAAMC,MAAM8C,QAAO,SAAAhC,GAC7B,OACEA,EAAKM,MAAMyB,cAAcE,SAAS9C,IAClCa,EAAKO,KAAKwB,cAAcE,SAAS9C,Q,oBAmDvC,WAAU,IAAD,OACP,OACE,oCACE,yBAAK+C,UAAU,sCACb,yBAAKA,UAAU,wBACf,2BACEC,SAAUL,KAAKxC,mBACf8C,KAAK,SACLF,UAAU,mBACVG,YAAY,SACZC,aAAW,YACXC,mBAAiB,kBAGrB,yBAAKL,UAAU,aACb,2BAAOA,UAAU,uBACf,+BACE,4BACE,wBAAIM,MAAM,OAAV,SACA,wBAAIA,MAAM,OACR,0BACEN,UAAWJ,KAAKlB,mBAAmB,SACnC6B,QAAS,WACP,EAAK5B,0BAA0B,WAHnC,UASF,wBAAI2B,MAAM,OACR,0BACEN,UAAWJ,KAAKlB,mBAAmB,QACnC6B,QAAS,kBAAM,EAAK5B,0BAA0B,UAFhD,SAOF,wBAAI2B,MAAM,OACR,0BACEN,UAAWJ,KAAKlB,mBAAmB,SACnC6B,QAAS,kBAAM,EAAK5B,0BAA0B,WAFhD,UAOF,wBAAI2B,MAAM,OACR,0BACEN,UAAWJ,KAAKlB,mBAAmB,OACnC6B,QAAS,kBAAM,EAAK5B,0BAA0B,SAFhD,UASN,+BAAQiB,KAAKnC,sB,GAlJG+C,IAAMC,WCSnBC,MAVf,WACE,OACE,yBAAKV,UAAU,yCACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,sBACA,uBAAGA,UAAU,QAAb,gDCEOW,MAPf,WACE,OAAO,oCACP,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCDFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cd247935.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nfunction usersList() {\r\n  return axios.get(\"https://randomuser.me/api/?results=200&nat=US\");\r\n}\r\n\r\nexport default {\r\n  usersList\r\n};","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport API from \"../utils/API\";\r\n\r\nclass UserContainer extends React.Component {\r\n  //set initial state\r\n  state = {\r\n    users: [],\r\n    search: \"\",\r\n    sortDirection: \"\",\r\n    col: \"\"\r\n  };\r\n\r\n  //after the component mounts, send a get request to retrieve the users.\r\n  //Map over the response to create an array of user objects.\r\n  //Use setState to add the array to our users state.\r\n  componentDidMount() {\r\n    API.usersList()\r\n      .then(res => {\r\n        const userArray = res.data.results.map(user => {\r\n          return {\r\n            first: user.name.first,\r\n            last: user.name.last,\r\n            email: user.email,\r\n            dob: user.dob.date,\r\n            image: user.picture.medium\r\n          };\r\n        });\r\n        this.setState({ users: userArray });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  //function to update search state each time the user types a character\r\n  handleSearchChange = e => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n\r\n  //function to filter list to only show first/last that matches search\r\n  filteredUsers() {\r\n    const search = this.state.search.toLowerCase();\r\n    return this.state.users.filter(user => {\r\n      return (\r\n        user.first.toLowerCase().includes(search) ||\r\n        user.last.toLowerCase().includes(search)\r\n      );\r\n    });\r\n  }\r\n\r\n  //function to render a table of users\r\n  renderUsers = () => {\r\n    return this.filteredUsers()\r\n      .sort(this.sortUsers)\r\n      .map((user, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>\r\n              <img src={user.image} alt=\"user\"></img>\r\n            </td>\r\n            <td>{user.first}</td>\r\n            <td>{user.last}</td>\r\n            <td>{user.email}</td>\r\n            <td>{new Date(user.dob).toDateString()}</td>\r\n          </tr>\r\n        );\r\n      });\r\n  };\r\n\r\n  //depending on which column was clicked, add or remove the arrow\r\n  //icon specifying the sort direction\r\n  getHeaderClassName = col => {\r\n    return this.state.col === col\r\n      ? `clickable ${this.state.sortDirection}`\r\n      : `clickable`;\r\n  };\r\n\r\n  //depending on which column was clicked, set the sort direction to\r\n  //the opposite of what it was.\r\n  handleSortDirectionChange = col => {\r\n    this.state.col === col && this.state.sortDirection === \"ascending\"\r\n      ? this.setState({ sortDirection: \"descending\", col: col })\r\n      : this.setState({ sortDirection: \"ascending\", col: col });\r\n  };\r\n\r\n  //function to return 1 or -1 to sort function depending on sort direction\r\n  sortUsers = (a, b) => {\r\n    if (a[this.state.col] < b[this.state.col]) {\r\n      return this.state.sortDirection === \"ascending\" ? -1 : 1;\r\n    } else if (a[this.state.col] > b[this.state.col]) {\r\n      return this.state.sortDirection === \"ascending\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  //render the user container including search field\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"input-group justify-content-center\">\r\n          <div className=\"input-group-prepend\"></div>\r\n          <input\r\n            onChange={this.handleSearchChange}\r\n            type=\"search\"\r\n            className=\"form-control m-3\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"SearchBox\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </div>\r\n        <div className=\"table m-3\">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Image</th>\r\n                <th scope=\"col\">\r\n                  <span\r\n                    className={this.getHeaderClassName(\"first\")}\r\n                    onClick={() => {\r\n                      this.handleSortDirectionChange(\"first\");\r\n                    }}\r\n                  >\r\n                    First\r\n                  </span>\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <span\r\n                    className={this.getHeaderClassName(\"last\")}\r\n                    onClick={() => this.handleSortDirectionChange(\"last\")}\r\n                  >\r\n                    Last\r\n                  </span>\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <span\r\n                    className={this.getHeaderClassName(\"email\")}\r\n                    onClick={() => this.handleSortDirectionChange(\"email\")}\r\n                  >\r\n                    Email\r\n                  </span>\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <span\r\n                    className={this.getHeaderClassName(\"dob\")}\r\n                    onClick={() => this.handleSortDirectionChange(\"dob\")}\r\n                  >\r\n                    DOB\r\n                  </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderUsers()}</tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserContainer;","import \"./styles.css\";\r\nimport React from \"react\";\r\n\r\nfunction JumboTron() {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid text-center\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Employee Directory</h1>\r\n        <p className=\"lead\">Click on a header to sort or search below</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default JumboTron;","import React from 'react';\r\nimport UserContainer from './components/UserContainer'\r\nimport JumboTron from './components/JumboTron';\r\nfunction App() {\r\n  return <>\r\n  <JumboTron/>\r\n  <UserContainer/> \r\n  </>\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}